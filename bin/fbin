#!/usr/bin/env node

var http      = require('http'),
    fs        = require('fs'),
    path      = require('path'),
    pkgInfo   = JSON.parse(fs.readFileSync(path.join(__dirname, '../package.json'))),
    commander = require('commander');

commander
  .version(pkgInfo.version)
  .option('-h, --host <host>', 'The host to download from (defaults to "functionbin.herokuapp.com")')
  .option('-f, --format <format>', 'The format you want the JavaScript in (either "node" [default] or "browser")')
  .option('-o, --output <path>', 'Where to save the downloaded functions (defaults to "dependencies.js")')
  .parse(process.argv);

var host = (commander.host || 'functionb.in').split(':'),
    domain = host[0],
    port = host[1] || 80,
    format = commander.format || 'node',
    binfilePath = path.join(process.cwd(), 'Binfile'),
    outputPath = path.join(process.cwd(), commander.output || 'dependencies.js'),
    binfile;

if (fs.existsSync(binfilePath)) {
  binfile = fs.readFileSync(binfilePath, 'utf-8');

} else {
  console.log('There is no Binfile in the current directory.');
  process.exit();
}

var postOptions = {
  method: 'POST',
  host: domain,
  port: port,
  path: '/api/binfile?format=' + format,
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': binfile.length
  }
};

var request = http.request(postOptions, function(response) {
  console.log('Received response - writing to ' + outputPath + '...');
  var stream = fs.createWriteStream(outputPath);
  response.pipe(stream);

  stream.on('finish', function() {
    stream.close();
    console.log('Done.');
  });
});

request.write(binfile);
request.end();
